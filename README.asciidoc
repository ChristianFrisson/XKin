// -*- Doc -*-
:Author: Fabrizio Pedersoli
:Email: <f.peder@gmail.com>

== XKin

eXtensible hand pose and gesture recognition library for Kinect

=== Description

XKin is an open source library that enables users to build
hand gesture based applications employing Kinect sensor. Hand Gesture
recognition comes in two ways: static hand pose (posture) and dynamic
hand movement (gesture). For this purpose this package provides four
libraries: 

- libbody (body detection)
- libhand (hand detection and contour extraction)
- libposture (posture classification)
- libgesture (hand trajectory movement classification)

This package comes also with some useful tool for training and testing
the models (posture and gesture).

=== Demo

This package provides also some demostration videos of two simple
gesture applications that comes with XKin. One video shows a posture
based application which is an implementation of the rock papper scissor
game. 

image:doc/imgs/demoposture.png[]

The other video illustrates a gesture based application. In this case
is implemented a basic image gallery application, the interaction is
done by using four gesture that enable the user to perform zoom (in/out)
navigation (previous/next) operations. 

image:doc/imgs/demogesture.png[]

// ==== Example of hand detection 

// Starting from the Kinect depth image with XKin is easily possible to
// extract the body and the hand. The images below depicts the processing
// sequence which is achieved by +body_detection+ and +hand_detection+
// function.

// [grid="none", frame="none", format="csv"]
// [width="85%", align="center", cols="3*^"]
// |======
// image:doc/imgs/depth.png[], image:doc/imgs/body.png[], image:doc/imgs/hand.png[]
// |======

=== Requirements 

In order to compile XKin you will need:

- cmake (>=2.6)
- libfreenect (https://github.com/OpenKinect/libfreenect)
- OpenCV (http://sourceforge.net/projects/opencvlibrary/files)
- fftw (http://www.fftw.org/download.html)

=== Compile

This procedure use ccmake, the console gui of cmake, to configure the
project and generate unix makefiles for compilation:

- +cd+ to the source folder
- +mkdir+ a directory like +build/+ and +cd+ to that
- type +ccmake ..+ (sometimes configuration may fail if some library
  dependencies is installed in a non standard path, from the gui it's
  possibile to specify manually libraries and include)
- type +make+ (compile all the stuff)
